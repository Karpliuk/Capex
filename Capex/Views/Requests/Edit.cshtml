@model Capex.Models.Request

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Request</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.RequestID)
        @Html.HiddenFor(model => model.User.UserID)
        @Html.HiddenFor(model => model.CreationDate)
        @*<div class="form-group">
            @Html.LabelFor(model => model.UserID, "UserID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UserID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.CreationDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreationDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreationDate, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.Label("*", htmlAttributes: new { @style = "text-align:left; margin-left:-20px; color:red; width:0px;", @class = "control-label col-md-1" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Value, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.Label("*", htmlAttributes: new { @style = "text-align:left; margin-left:-20px; color:red; width:0px;", @class = "control-label col-md-1" })
            <div class="col-md-9">
                @if (ViewBag.PriceReadOnly)
                {
                    @Html.EditorFor(model => model.Value, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                }
                else
                {
                    @Html.EditorFor(model => model.Value, new { htmlAttributes = new { @class = "form-control" } })
                }
               
                @Html.Label("Округление до сотых", htmlAttributes: new {@style = "color:green; font-style:italic;"})<br/>
                @Html.ValidationMessageFor(model => model.Value, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Currency, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.Label("*", htmlAttributes: new { @style = "text-align:left; margin-left:-20px; color:red; width:0px;", @class = "control-label col-md-1" })
            <div class="col-md-9">
                @if (ViewBag.PriceReadOnly)
                {
                    @Html.EnumDropDownListFor(model => model.Currency, htmlAttributes: new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                }
                else
                {
                    @Html.EnumDropDownListFor(model => model.Currency, htmlAttributes: new { @class = "form-control" })
                }
                @Html.ValidationMessageFor(model => model.Currency, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LongDescription, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.LongDescription, new {cols = 40, @rows = 5, @style = "margin-left:10px;"})
                @Html.ValidationMessageFor(model => model.LongDescription, "", new {@class = "text-danger"})
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.CommentRequest, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.CommentRequest, new { cols = 40, @rows = 5, @style = "margin-left:10px;" })
                @Html.ValidationMessageFor(model => model.CommentRequest, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.Label("*", htmlAttributes: new { @style = "text-align:left; margin-left:-20px; color:red; width:0px;", @class = "control-label col-md-1" })
            <div class="col-md-9">
                @Html.DropDownList("State", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-3 col-md-10">
                <input type="submit" value="Сохранить" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Вернуться к списку", "Index", new {filter=true})
</div>
